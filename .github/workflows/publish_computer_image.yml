name: Publish hugegraph-computer image

on:
#  schedule:
#    - cron:  '50 0-23 * * *'
  workflow_dispatch:
    inputs:
      repository_url:
        required: true
        default: 'apache/hugegraph-computer'
      repository_branch:
        required: true
        default: 'master'
      computer_image_url:
        required: true
        default: 'hugegraph/hugegraph-computer:latest'
      operator_image_url:
        required: true
        default: 'hugegraph/hugegraph-computer-operator:latest'
      manager_image_url:
        required: true
        default: 'hugegraph/hugegraph-computer-operator-manager:latest'  
      docker_registry_url:
        required: false
        default: ''
env:
  repository_url: apache/hugegraph-computer
  repository_branch: master
  computer_image_url: hugegraph/hugegraph-computer:latest
  operator_image_url: hugegraph/hugegraph-computer-operator:latest
  docker_registry_url: ""

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Reset env
        if: github.event_name == 'workflow_dispatch'
        run: |
         echo "repository_url=${{ github.event.inputs.repository_url }}" >> $GITHUB_ENV
         echo "repository_branch=${{ github.event.inputs.repository_branch }}" >> $GITHUB_ENV
         echo "computer_image_url=${{ github.event.inputs.computer_image_url }}" >> $GITHUB_ENV
         echo "operator_image_url=${{ github.event.inputs.operator_image_url }}" >> $GITHUB_ENV
         echo "manager_image_url=${{ github.event.inputs.manager_image_url }}" >> $GITHUB_ENV         
         echo "docker_registry_url=${{ github.event.inputs.docker_registry_url }}" >> $GITHUB_ENV
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.docker_registry_url }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Install JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'
          
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ env.repository_url }}
          ref: ${{ env.repository_branch }}
          fetch-depth: 2
          
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2          
      
      - name: Package
        run: |
          mvn clean package -DskipTests

      - name: Build CRD
        run: |
          cd computer-k8s-operator/crd-generate
          make kustomize
          make gen-all
          
      - name: Build Computer Image
        uses: docker/build-push-action@v4
        with:
          context: ./apache-hugegraph-computer-incubating-1.0.0
          file: ./computer-dist/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.computer_image_url }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build Operator Image
        uses: docker/build-push-action@v4
        with:
          context: ./computer-k8s-operator
          file: ./computer-k8s-operator/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.operator_image_url }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max     

      - name: Build Manger Image
        uses: docker/build-push-action@v4
        with:
          context: ./computer-k8s-operator/crd-generate
          file: ./computer-k8s-operator/crd-generate/Dockerfile
          tags: ${{ env.manager_image_url }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max 
